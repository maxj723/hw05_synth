# test_hazard_fwd.s
.globl _start
_start:
  # EX/MEM -> EX Forwarding
  addi x1, x0, 5      # Cycle 0: x1 WB in cycle 4
  addi x2, x1, 1      # Cycle 1: Reads x1 in ID (cycle 2), needs x1 from end of cycle 3 (MEM stage of prev instr) -> MEM->EX Forward

  # MEM/WB -> EX Forwarding
  addi x3, x0, 10     # Cycle 2: x3 WB in cycle 6
  nop                   # Cycle 3: Bubble (nop = addi x0, x0, 0)
  addi x4, x3, 1      # Cycle 4: Reads x3 in ID (cycle 5), needs x3 from end of cycle 5 (WB stage of addi x3) -> WB->EX Forward

  # Multiple forwards
  addi x5, x0, 20     # Cycle 5
  add  x6, x5, x1     # Cycle 6: Needs x5 (MEM->EX), Needs x1 (WB->EX)
  add  x7, x6, x2     # Cycle 7: Needs x6 (MEM->EX), Needs x2 (WB->EX)

halt:
  j halt
