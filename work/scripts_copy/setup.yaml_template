%TAG ! tag:design.stylus.cadence.com,0.1:
---
# Generated Using: Innovus 21.18-s099_1
####################################################################################################
# MMMC Config
####################################################################################################
# Flow paramters which relate to multi-mode, multi-corner (mmmc) setup.  The majority of items will
# be consumed in the mmmc_config.tcl file
####################################################################################################

# Library Sets created using 'create_library_set'
#---------------------------------------------------------------------------------------------------
#   library_sets:
#     <name>:
#       library_files:
#         - <list of library files (.lbd or .lib)>
#     [ socv_files:
#         - <list of optional SOCV variation library files> ]
library_sets:
  < PLACEHOLDER: LIBRARY_SET NAME >:
    library_files:
      - < PLACEHOLDER: LIBRARY_SET LIB FILES >

# Opconds to be created using 'create_opcond' (these are optional MMMC objects)
#---------------------------------------------------------------------------------------------------
#   opconds:
#     <name>:
#       process: <process for the opcond>
#       temperature: <temperature for the opcond>
#       voltage: <voltage for the opcond>
opconds:
  < PLACEHOLDER: OPCOND NAME >:
    process: < PLACEHOLDER: OPCOND PROCESS >
    temperature: < PLACEHOLDER: OPCOND TEMPERATURE >
    voltage: < PLACEHOLDER: OPCOND VOLTAGE >

# Timing conditions to be created using 'create_timing_condition'
#---------------------------------------------------------------------------------------------------
#   timing_conditions:
#     <name>:
#       library_sets:
#          - <list of library_set objects to associate to the timing_condition>
#     [ opcond: <name of opcond for the timing_condition> ]"
#     [ opcond_library: <name of library to search for the opcond> ]"
timing_conditions:
  < PLACEHOLDER: TIMING CONDITION NAME >:
    library_sets:
      - < PLACEHOLDER: TIMING_CONDITION LIBRARY_SET NAMES >

# RC corners to be created using 'create_rc_corner'
#---------------------------------------------------------------------------------------------------
#   rc_corners:
#     <name>:
#       temperature: <temperature for the rc corner>
#       qrc_tech_file: <path to extraction technology file associated with the rc_corner >
rc_corners:
  < PLACEHOLDER: RC_CORNER NAME >:
    temperature: < PLACEHOLDER: RC_CONER TEMPERATURE >
    qrc_tech_file: < PLACEHOLDER: RC_CORNER QUANTUS TECH FILE >

# Delay corners to be created using 'create_delay_corner'
#---------------------------------------------------------------------------------------------------
#   delay_corners:
#     <name>:
#       rc_corner:
#            early: <early rc_corner>
#            late: <late rc_corner>
#       timing_condition:
#            early: <early timing_condition for each power_domain>
#            late: <late timing_condition for each power_domain>
delay_corners:
  < PLACEHOLDER: DELAY_CONER NAME >:
    rc_corner:
      early: < PLACEHOLDER: DELAY_CONER EARLY RC_CORNER NAME >
      late: < PLACEHOLDER: DELAY_CONER LATE RC_CORNER NAME >
    timing_condition:
      early: < PLACEHOLDER: DELAY_CONER EARLY TIMING_CONDITION NAME >
      late: < PLACEHOLDER: DELAY_CONER LATE TIMING_CONDITION NAME >

# Constraint modes to be created using 'create_constraint_mode'
#---------------------------------------------------------------------------------------------------
#   constraint_modes:
#     <name>:
#       sdc_files:
#          -  <list of constraint files to associate with the constraint_mode>
#     [ tcl_variables:
#          -  <optional list of TCL variables defined as key/value pairs> ]

constraint_modes:
  < PLACEHOLDER: CONSTRAINT_MODE NAME >:
    sdc_files:
      - < PLACEHOLDER: CONSTRAINT_MODE SDC FILES >

# Analysis views to be created using 'create_analysis_view'
#---------------------------------------------------------------------------------------------------
#   analysis_views:
#     <name>:
#       constraint_mode : <constraint_mode to associate to analysis_view>
#       delay_corner : <delay_corner object to associate to analysis_view>
#       is_setup : <enable analysis_view for setup timing analysis and optimization (true|false) >
#       is_hold : <enable analysis_view for hold timing analysis and optimization (true|false) >
#       is_dynamic : <enable analysis_view for dynamic power analysis and optimization (true|false) >
#       is_leakage : <enable analysis_view for leakage power analysis and optimization (true|false) >
analysis_views:
  < PLACEHOLDER: ANALYSIS_VIEW NAME >:
    constraint_mode: < PLACEHOLDER: ANALYSIS_VIEW CONSTRAINT_MODE NAME >
    delay_corner: < PLACEHOLDER: ANALYSIS_VIEW DELAY_CORNER NAME >
    is_setup: < PLACEHOLDER: ANALYSIS_VIEW ENABLED FOR SETUP >
    is_hold: < PLACEHOLDER: ANALYSIS_VIEW ENABLED FOR HOLD >
    is_dynamic: < PLACEHOLDER: ANALYSIS_VIEW ENABLED FOR DYNAMIC >
    is_leakage: < PLACEHOLDER: ANALYSIS_VIEW ENABLED FOR LEAKAGE >

####################################################################################################
# Tool Config
####################################################################################################
# Flow parameters which relate to design and tool setup.  Majority of items will be consumed in the
# 'init_design' and 'init_<TOOL>' flow_steps.
####################################################################################################

# 'init' related attributes
#---------------------------------------------------------------------------------------------------
# A YAML list of verilog files read in by 'read_netlist' command.
init_netlist_files:
  - < PLACEHOLDER: LIST OF NETLIST FILES FOR READ_NETLIST >

# A YAML list of lef files or oa libraries read in by 'read_physical' command.
init_physical_files:
  lef_files:
    - < PLACEHOLDER: LIST OF LEF FILES FOR READ_PHYSICAL >
  oa_ref_libs:
    - < PLACEHOLDER: LIST OF OA REF LIBS FOR READ_PHYSICAL >
  oa_search_libs:
    - < PLACEHOLDER: LIST OF OA SEARCH LIBS FOR READ_PHYSICAL >

# A YAML list of power/ground net names used by 'init_design' command.  This is typically not necessary
# when a power_intent file is specified.
init_power_nets:
  - < PLACEHOLDER: LIST OF POWER NETS FOR INIT_DESIGN >

init_ground_nets:
  - < PLACEHOLDER: LIST OF GROUND NETS FOR INIT_DESIGN >

# Path to power_intent files which are keyed by power_intent type.  These entries will be
# expanded and used by the 'read_power_intent' command.
#   init_power_intent_files:
#     cpf: < power intent file in CPF format >
#     1801: < power intent file in 1801 format >
init_power_intent_files:
  cpf: < PLACEHOLDER: LIST OF CPF FILES FOR READ_POWER_INTENT >
  1801: < PLACEHOLDER: LIST OF 1801 FILES FOR READ_POWER_INTENT >

# A YAML list of def files read in during 'init_floorplan' flow_step.  This can include both
# floorplan and DFT related files.
init_def_files:
  - < PLACEHOLDER: LIST OF DEF FILES FOR READ_DEF >

# Path to floorplan file read in during 'init_floorplan' flow_step.
init_floorplan_file: < PLACEHOLDER: A FLOORPLAN FILE FOR READ_FLOORPLAN >

# 'design' related attributes
#---------------------------------------------------------------------------------------------------
# The name of the toplevel module.
design_name: < PLACEHOLDER: DESIGN NAME >

# The process technology node size.  Valid value is an integer.
design_process_node: < PLACEHOLDER: DESIGN PROCESS NODE >

# The name of process and technology node size used in route related settings.
design_tech_node: < PLACEHOLDER: DESIGN TECH NODE >

# The flow effort optimization level {express standard extreme}.
design_flow_effort: < PLACEHOLDER: FLOW EFFORT LEVEL >

# The power effort optimization level {none low high}.
design_power_effort: < PLACEHOLDER: POWER EFFORT LEVEL >

# A YAML list of base_cell names which should be marked as dont_use
dont_use_cells:
  - < PLACEHOLDER: LIST OF DONT_USE BASE_CELLS >

# 'place' related attributes
#---------------------------------------------------------------------------------------------------

# A YAML list of tieoff cell base_cell names.
add_tieoffs_cells:
  - < PLACEHOLDER: LIST OF TIEOFF BASE_CELLS >

# The max distance between a tie-cell and the attached  loads should be less than given value.
add_tieoffs_max_distance: < PLACEHOLDER: MAX DISTANCE TO TIEOFF >

# The max number of tie-pins a tie-net can drive. A '0' means no-limit.
add_tieoffs_max_fanout: < PLACEHOLDER: MAX FANOUT FOR TIEOFF >

# A YAML list of filler cell base_cell names.
add_fillers_cells:
  - < PLACEHOLDER: LIST OF FILLER BASE_CELLS >

# 'opt' related attributes
#---------------------------------------------------------------------------------------------------
# The relative effort for leakage and dynamic power optimization in the range [0.0 - 1.0]
opt_leakage_to_dynamic_ratio: 1.0

# 'cts' related attributes
#---------------------------------------------------------------------------------------------------
# A YAML list of glob patterns for clock buffer cells used in CTS optimization. If none are
# specified, base_cells from library are chosen automatically.  The base_cell's 'dont_touch' status
# is ignored for listed cells.
cts_buffer_cells:
  - < PLACEHOLDER: LIST OF CTS BUFFER BASE_CELLS >

# A YAML list of glob patterns for clock inverter cells used in CTS optimization. If none are
# specified, base_cells from library are chosen automatically.  The base_cell's 'dont_touch' status
# is ignored for listed cells.
cts_inverter_cells:
  - < PLACEHOLDER: LIST OF CTS INVERTER BASE_CELLS >

# A YAML list of glob patterns for clock gate cells to be inserted and optimized. If none are
# specified, base_cells from library are chosen automatically.  The base_cell's 'dont_touch' status
# is ignored for listed cells.
cts_clock_gating_cells:
  - < PLACEHOLDER: LIST OF CTS CLOCK_GATING BASE_CELLS >

# A YAML list of glob patterns for clock logic cells used in CTS optimization. If none are
# specified, base_cells from library are chosen automatically.  The base_cell's 'dont_touch' status
# is ignored for listed cells.
cts_logic_cells:
  - < PLACEHOLDER: LIST OF CTS LOGIC BASE_CELLS >

# The target skew used for clock tree synthesis. Valid values are: default | auto | ignore | double
# .
cts_target_skew: < PLACEHOLDER: MAX SKEW FOR CTS NETS >

# The target slew used for clock tree synthesis. This attribute specifies a maximum slew time that
# the clock tree synthesis algorithm will allow in library units.
cts_target_max_transition_time:
  top: < PLACEHOLDER: MAX TRANSITION FOR CTS TOP NETS >
  trunk: < PLACEHOLDER: MAX TRANSITION FOR CTS TRUNK NETS >
  leaf: < PLACEHOLDER: MAX TRANSITION FOR CTS LEAF NETS >

# 'route' related attributes
#---------------------------------------------------------------------------------------------------
# The names of top and bottom metal layers to use for global and detail routing.
routing_layers:
  top: < PLACEHOLDER: TOP ROUTING LAYER NAME >
  bottom: < PLACEHOLDER: BOTTOM ROUTING LAYER NAME >

# The base_cell name to use for antenna violation fixing.
route_design_antenna_cell_name: < PLACEHOLDER: ROUTE DESIGN ANTENNA DIODE BASE_CELL >

# 'timing' related attributes
#---------------------------------------------------------------------------------------------------
# Enable AOCV during timing analysis (may not be enabled if using SOCV).
timing_analysis_aocv: false

# Enable SOCV during timing analysis (may not be enabled if using AOCV).
timing_analysis_socv: false
